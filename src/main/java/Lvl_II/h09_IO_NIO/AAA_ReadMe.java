package Lvl_II.h09_IO_NIO;

public class AAA_ReadMe {
/**
 *  FileWriter и FileReader используются для записи и чтения данных из текстовых файлов (это классы потока символов).
 *      Рекомендуется не использовать классы FileInputStream и FileOutputStream, если вам нужно читать и записывать
 *      какую-либо текстовую информацию, поскольку это классы потока байтов.
 *  try -with-resources — это оператор try, который объявляет один или несколько ресурсов . Ресурс — это объект, который
 *      должен быть закрыт после того, как программа завершит работу с ним. Оператор try -with-resources гарантирует,
 *      что каждый ресурс будет закрыт в конце оператора.
 *  BufferedReader и BufferedWriter - Текст, записанный в буферизованный писатель, хранится во внутреннем буфере и
 *      записывается в базовый писатель только тогда, когда буфер заполняется или очищается . Аналогично, чтение текста
 *      из буферизованного читателя может привести к чтению большего количества символов, чем было запрошено;
 *      дополнительные символы сохраняются во внутреннем буфере.
 *  FileInputStream и FileOutputStream предназначены для чтения и записи файлов. Они являются основными инструментами
 *      при взаимодействии с файловой системой.
 *  DataInputStream и DataOutputStream - Поток ввода данных позволяет приложению считывать примитивные типы данных Java
 *      из базового потока ввода машинно-независимым способом . Приложение использует поток вывода данных для записи
 *      данных, которые впоследствии могут быть считаны потоком ввода данных.
 *  Serilization Сериализация в Java — это процесс преобразования объекта в последовательность байтов, которую можно
 *      сохранить в файле, передать по сети или сохранить в памяти. Сериализация позволяет сохранить состояние объекта,
 *      включая его поля и значения, и восстановить объект позднее путем десериализации.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
*/
}
